#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2020 Jesper Pedersen <jesper.pedersen@redhat.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

NODE_EXPORTER_PIDFILE=/tmp/node_exporter.pid

function trap_sigterm() {
    kill -SIGINT $(head -1 $NODE_EXPORTER_PIDFILE)
}

trap 'trap_sigterm' SIGINT SIGTERM

if [ ! -f /pgagroal/pgagroal.conf ]; then
    export PG_MAX_CONNECTIONS=${PG_MAX_CONNECTIONS:-100}
    export PG_IDLE_TIMEOUT=${PG_IDLE_TIMEOUT:-0}
    export PG_VALIDATION=${PG_VALIDATION:-off}

    export PG_PRIMARY_NAME=${PG_PRIMARY_NAME}
    export PG_PRIMARY_PORT=${PG_PRIMARY_PORT}
    export PG_MASTER_PASSWORD=${PG_MASTER_PASSWORD}
    export PG_NETWORK_MASK=${PG_NETWORK_MASK}
    export PG_USER1_NAME=${PG_USER1_NAME}
    export PG_USER1_PASSWORD=${PG_USER1_PASSWORD}
    export PG_USER1_DATABASE=${PG_USER1_DATABASE}

    if [ -z "${PG_PRIMARY_NAME}" ] || [ -z "${PG_PRIMARY_PORT}" ] ||
       [ -z "${PG_MASTER_PASSWORD}" ] ||
       [ -z "${PG_USER1_NAME}" ] || [ -z "${PG_USER1_PASSWORD}" ] || [ -z "${PG_USER1_DATABASE}" ] ||
       [ -z "${PG_NETWORK_MASK}" ]; then
        echo "PG_PRIMARY_NAME, PG_PRIMARY_PORT, PG_MASTER_PASSWORD, PG_USER1_NAME, PG_USER1_PASSWORD, PG_USER1_DATABASE and PG_NETWORK_MASK needs to be defined."
        exit 1
    fi
    
    sed -i "s/PG_MAX_CONNECTIONS/$PG_MAX_CONNECTIONS/g" /conf/pgagroal.conf
    sed -i "s/PG_IDLE_TIMEOUT/$PG_IDLE_TIMEOUT/g" /conf/pgagroal.conf
    sed -i "s/PG_VALIDATION/$PG_VALIDATION/g" /conf/pgagroal.conf

    sed -i "s/PG_PRIMARY_NAME/$PG_PRIMARY_NAME/g" /conf/pgagroal.conf
    sed -i "s/PG_PRIMARY_PORT/$PG_PRIMARY_PORT/g" /conf/pgagroal.conf
    
    if [ -f /pgconf/root.crt ] && [ -f /pgconf/server.crt ] && [ -f /pgconf/server.key ]; then
        sed -i "s/tls = off/tls = on/g" /conf/pgagroal.conf

        cp /pgconf/root.crt /pgagroal
        cp /pgconf/server.crt /pgagroal
        cp /pgconf/server.key /pgagroal
        chmod 0600 /pgagroal/server.key
    fi

    touch /pgagroal/pgagroal_hba.conf
    touch /pgagroal/pgagroal_databases.conf

    if [ -f /pgconf/root.crt ] && [ -f /pgconf/server.crt ] && [ -f /pgconf/server.key ]; then
        echo "hostssl ${PG_USER1_DATABASE} ${PG_USER1_NAME} ${PG_NETWORK_MASK} scram-sha-256" >> /pgagroal/pgagroal_hba.conf
    else
        echo "host ${PG_USER1_DATABASE} ${PG_USER1_NAME} ${PG_NETWORK_MASK} scram-sha-256" >> /pgagroal/pgagroal_hba.conf
    fi

    echo "${PG_USER1_DATABASE} ${PG_USER1_NAME} all" >> /pgagroal/pgagroal_databases.conf

    cp /conf/pgagroal.conf /pgagroal

    pgagroal-admin -P ${PG_MASTER_PASSWORD} master-key
    pgagroal-admin -u /pgagroal/pgagroal_users.conf -U ${PG_USER1_NAME} -P ${PG_USER1_PASSWORD} add-user
fi

/usr/local/bin/node_exporter >> /tmp/node_exporter.log 2>&1 &
echo $! > $NODE_EXPORTER_PIDFILE

exec pgagroal -c /pgagroal/pgagroal.conf -a /pgagroal/pgagroal_hba.conf -u /pgagroal/pgagroal_users.conf -l /pgagroal/pgagroal_databases.conf "$@"
