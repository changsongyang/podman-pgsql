#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2022 Jesper Pedersen <jesper.pedersen@redhat.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

NODE_EXPORTER_PIDFILE=/tmp/node_exporter.pid

function trap_sigterm() {
    kill -SIGINT $(head -1 $NODE_EXPORTER_PIDFILE)
}

trap 'trap_sigterm' SIGINT SIGTERM

if [ ! -f /pgdata/PG_VERSION ]; then
    export PG_MASTER=${PG_MASTER}
    export PG_REPLICATION_NAME=${PG_REPLICATION_NAME}
    export PG_REPLICATION_PASSWORD=${PG_REPLICATION_PASSWORD}
    export PG_SLOT_NAME=${PG_SLOT_NAME}

    if [ -z "${PG_MASTER}" ] ||
       [ -z "${PG_REPLICATION_NAME}" ] || [ -z "${PG_REPLICATION_PASSWORD}" ] ||
       [ -z "${PG_SLOT_NAME}" ]; then
        echo "PG_MASTER, PG_REPLICATION_NAME, PG_REPLICATION_PASSWORD and PG_SLOT_NAME needs to be defined."
        exit 1
    fi

    chown -R postgres:postgres /conf /pgconf /pgdata /pgwal
    chmod 700 /pgconf /pgdata /pgwal

    PGPASSWORD="$PG_REPLICATION_PASSWORD" /usr/pgsql-14/bin/pg_basebackup -S ${PG_SLOT_NAME} -X stream --no-password -c fast -h ${PG_MASTER} -U ${PG_REPLICATION_NAME} -D /pgdata --waldir=/pgwal

    echo "" >> /pgdata/postgresql.conf
    echo "#" >> /pgdata/postgresql.conf
    echo "# REPLICATION INFORMATION" >> /pgdata/postgresql.conf
    echo "#" >> /pgdata/postgresql.conf

    echo -n "primary_conninfo = 'host=${PG_MASTER} port=5432 user=${PG_REPLICATION_NAME} application_name=${PG_SLOT_NAME} password=${PG_REPLICATION_PASSWORD}" >> /pgdata/postgresql.conf
    
    if [ -f /pgconf/root.crt ] && [ -f /pgconf/postgresql.crt ] && [ -f /pgconf/postgresql.key ]; then
        mkdir ~/.postgresql
        cp /pgconf/root.crt ~/.postgresql
        cp /pgconf/postgresql.crt ~/.postgresql
        cp /pgconf/postgresql.key ~/.postgresql
        chmod 0600 ~/.postgresql/postgresql.key

        echo -n " sslmode=verify-ca" >> /pgdata/postgresql.conf
    fi

    echo "'" >> /pgdata/postgresql.conf

    echo "primary_slot_name = '${PG_SLOT_NAME}'" >> /pgdata/postgresql.conf
    echo "promote_trigger_file = '/pgdata/promote.signal'" >> /pgdata/postgresql.conf

    cp /conf/standby.signal /pgdata/
fi

/usr/local/bin/node_exporter >> /tmp/node_exporter.log 2>&1 &
echo $! > $NODE_EXPORTER_PIDFILE

exec /usr/pgsql-14/bin/postgres -D /pgdata/ "$@"
