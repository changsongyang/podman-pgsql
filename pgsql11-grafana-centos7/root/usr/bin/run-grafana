#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2019 Jesper Pedersen <jesper.pedersen@redhat.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

PROMETHEUS_ADAPTER_PIDFILE=/tmp/prometheus-postgresql-adapter.pid
PROMETHEUS_PIDFILE=/tmp/prometheus.pid
GRAFANA_PIDFILE=/tmp/grafana.pid

function trap_sigterm() {
    kill -SIGINT $(head -1 $GRAFANA_PIDFILE)
    kill -SIGINT $(head -1 $PROMETHEUS_PIDFILE)
    kill -SIGINT $(head -1 $PROMETHEUS_ADAPTER_PIDFILE)
    /usr/pgsql-11/bin/pg_ctl -D /pgdata/ stop
}

trap 'trap_sigterm' SIGINT SIGTERM

if [ ! -f /pgdata/PG_VERSION ]; then
    export PG_MAX_CONNECTIONS=${PG_MAX_CONNECTIONS:-100}
    export PG_SHARED_BUFFERS=${PG_SHARED_BUFFERS:-256}
    export PG_WORK_MEM=${PG_WORK_MEM:-8}
    export PG_MAX_PARALLEL_WORKERS=${PG_MAX_PARALLEL_WORKERS:-8}
    export PG_EFFECTIVE_CACHE_SIZE=${PG_EFFECTIVE_CACHE_SIZE:-1}
    export PG_MAX_WAL_SIZE=${PG_MAX_WAL_SIZE:-1}

    export PG_USER_NAME=${PG_USER_NAME}
    export PG_USER_PASSWORD=${PG_USER_PASSWORD}
    export PG_NETWORK_MASK=${PG_NETWORK_MASK}

    export PG_MONITOR1=${PG_MONITOR1}
    export PG_MONITOR2=${PG_MONITOR2}
    export PG_MONITOR3=${PG_MONITOR3}
    export PG_MONITOR4=${PG_MONITOR4}

    if [ -z "${PG_USER_NAME}" ] || [ -z "${PG_USER_PASSWORD}" ] ||
       [ -z "${PG_NETWORK_MASK}" ] || [ -z "${PG_MONITOR1}" ]; then
        echo "PG_USER_NAME, PG_USER_PASSWORD, PG_NETWORK_MASK and PG_MONITOR1 needs to be defined."
        exit 1
    fi
    
    /usr/pgsql-11/bin/initdb -k -X /pgwal/ /pgdata/

    sed -i "s/PG_MAX_CONNECTIONS/$PG_MAX_CONNECTIONS/g" /conf/postgresql.conf
    sed -i "s/PG_SHARED_BUFFERS/$PG_SHARED_BUFFERS/g" /conf/postgresql.conf
    sed -i "s/PG_WORK_MEM/$PG_WORK_MEM/g" /conf/postgresql.conf
    sed -i "s/PG_MAX_PARALLEL_WORKERS/$PG_MAX_PARALLEL_WORKERS/g" /conf/postgresql.conf
    sed -i "s/PG_EFFECTIVE_CACHE_SIZE/$PG_EFFECTIVE_CACHE_SIZE/g" /conf/postgresql.conf
    sed -i "s/PG_MAX_WAL_SIZE/$PG_MAX_WAL_SIZE/g" /conf/postgresql.conf

    sed -i "s/PG_USER_NAME/$PG_USER_NAME/g" /conf/pg_hba.conf
    sed -i "s/PG_NETWORK_MASK/$PG_NETWORK_MASK/g" /conf/pg_hba.conf

    if [ -f /pgconf/root.crt ] && [ -f /pgconf/server.crt ] && [ -f /pgconf/server.key ]; then
        sed -i "s/ssl = off/ssl = on/g" /conf/postgresql.conf
        sed -i "s/SSL/ssl/g" /conf/pg_hba.conf

        cp /pgconf/root.crt /pgdata
        cp /pgconf/server.crt /pgdata
        cp /pgconf/server.key /pgdata
    else
        sed -i "s/SSL//g" /conf/pg_hba.conf
    fi

    cp /conf/postgresql.conf /pgdata/
    cp /conf/pg_hba.conf /pgdata/

    if [ -f /pgdata/server.key ]; then
        chmod 0600 /pgdata/server.key
    fi

    sed -i "s/PG_USER_NAME/$PG_USER_NAME/g" /conf/setup.sql
    sed -i "s/PG_USER_PASSWORD/$PG_USER_PASSWORD/g" /conf/setup.sql

    /usr/pgsql-11/bin/pg_ctl -D /pgdata/ start
    /usr/pgsql-11/bin/psql -q -f /conf/setup.sql postgres
    /usr/pgsql-11/bin/pg_ctl -D /pgdata/ stop

    WATCH_LIST="'$PG_MONITOR1'"
    if [ ! -z $PG_MONITOR2 ]; then
        WATCH_LIST="$WATCH_LIST, '$PG_MONITOR2'"
    fi
    if [ ! -z $PG_MONITOR3 ]; then
        WATCH_LIST="$WATCH_LIST, '$PG_MONITOR3'"
    fi
    if [ ! -z $PG_MONITOR4 ]; then
        WATCH_LIST="$WATCH_LIST, '$PG_MONITOR4'"
    fi

    sed -i "s/WATCH_LIST/$WATCH_LIST/g" /conf/prometheus.yml
    cp /conf/prometheus.yml /usr/local/prometheus/

    sed -i "s/PG_USER_NAME/$PG_USER_NAME/g" /conf/defaults.ini
    sed -i "s/PG_USER_PASSWORD/$PG_USER_PASSWORD/g" /conf/defaults.ini
    cp /conf/defaults.ini /usr/local/grafana/conf/

    cd /usr/local/grafana/bin/
    ./grafana-cli plugins install grafana-piechart-panel
fi

/usr/pgsql-11/bin/pg_ctl -D /pgdata/ start

/usr/local/bin/prometheus-postgresql-adapter -pg.database=prometheus -pg.password=$PG_USER_PASSWORD -pg.user=$PG_USER_NAME -log.level warn  >> /tmp/prometheus-postgresql-adapter.log 2>&1 &
echo $! > $PROMETHEUS_ADAPTER_PIDFILE

cd /usr/local/prometheus/
./prometheus >> /tmp/prometheus.log 2>&1 &
echo $! > $PROMETHEUS_PIDFILE

cd /usr/local/grafana/bin/
./grafana-server >> /tmp/grafana.log 2>&1 &
echo $! > $GRAFANA_PIDFILE

wait
